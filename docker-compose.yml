version: '4'

services:

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - ./apps/api/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    restart: unless-stopped
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  profile:
    container_name: profile
    build:
      context: .
      dockerfile: ./apps/profile/Dockerfile
      target: development
    command: npm run start:dev profile
    restart: unless-stopped
    env_file:
      - ./apps/profile/.env
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  upload:
    container_name: upload
    build:
      context: .
      dockerfile: ./apps/upload/Dockerfile
      target: development
    command: npm run start:dev upload
    restart: unless-stopped
    env_file:
      - ./apps/upload/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  catalog:
    container_name: catalog
    build:
      context: .
      dockerfile: ./apps/catalog/Dockerfile
      target: development
    command: npm run start:dev catalog
    restart: unless-stopped
    env_file:
      - ./apps/catalog/.env
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  emailer:
    container_name: emailer
    build:
      context: .
      dockerfile: ./apps/emailer/Dockerfile
      target: development
    command: npm run start:dev emailer
    restart: unless-stopped
    env_file:
      - ./apps/emailer/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    image: postgres:15.2-alpine
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  
  adminer:
    image: adminer
    restart: unless-stopped
    container_name: adminer
    ports:
      - "8888:8080"
  
  rabbitmq:
    image: rabbitmq:3.11.9-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - local_rmqdata:/var/lib/rabbitmq/data

  redis:
    container_name: cache
    hostname: cache
    image: redis:7.0.9-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - local_redisdata:/data

volumes:
  local_pgdata:
  local_rmqdata:
  local_redisdata:

  
  
 
  